from itertools import permutations as prm
import base58 as b58
prime=""
words =["First","21digit","prime","found","in","consecutive","digits","of","e","BTC","XRP","ETH","Phemex"]
number =[]
digit=[]
print("".join(words))
for i in words :
    number.append(b58.b58decode(i).hex())

#104
pp=""
perm = prm(number,3)
for p in perm:
    for num in p:
        pp+=num
    print(pp)
    
    gg=str(int(pp,16))
    if(len(gg)==27):
        digit.append(gg)
    print("/"*100)
    pp=""
print(digit)
"""
all 27 digit in 3 ites computation
output :
'258800203769860074053924645',
'258800203769860074053997093',
'258800203769860074055731575',
'258800203769860074055731858',
'258800203769860074055764311',
'258800203769860074055774408',
'258800203769860074062305061',
'258800203769860074064889893',
'166033866348007201034376929',
'166033866348007186650727596',
'166033866348007177450035409',
'166033848459678523331581619',
'166033848459678523706559609', '166033848459678523604162870', '166034278640667366107027169', '166034278640667351723377836',
'166034278640667342522685649', '166034166054262189262804705', '166034166054262174879155372', '166034166054262165678463185',
'166037632148932512380502821', '166033786682375040964368051', '166033786682375041339346041', '166033786682375041236949302',
'166034381126438796822966851', '166033747165702997236651699', '166033747165702997611629689', '166033747165702997509232950',
'483258834834775618264405729', '483258834834775603880756396', '483258834834775594680064209', '483258816946446940561610419',
'483258816946446940936588409', '483258816946446940834191670', '483259247127435783337055969', '483259247127435768953406636',
'483259247127435759752714449', '483259134541030606492833505', '483259134541030592109184172', '483259134541030582908491985',
'483262600635700929610531621', '483258755169143458194396851', '483258755169143458569374841', '483258755169143458466978102',
'483259349613207214052995651', '483258715652471414466680499', '483258715652471414841658489', '483258715652471414739261750',
'213715600725542008757065441', '213715600725541994373416108', '213715600725541985172723921', '213715582837213331054270131',
'213715582837213331429248121', '213715582837213331326851382', '213716013018202173829715681', '213716013018202159446066348',
'213716013018202150245374161', '213715900431796996985493217', '213715900431796982601843884', '213715900431796973401151697',
'213719366526467320103191333', '213715521059909848687056563', '213715521059909849062034553', '213715521059909848959637814',
'213716115503973604545655363', '213715481543237804959340211', '213715481543237805334318201',
'213715481543237805231921462'
"""
